using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Field : MonoBehaviour
{
    public int nowHeight { set; get; }


    public int nowPiller { get; set; }

    public bool FallFlag { get; set; }//落下フラグ

    //移動関係
    private int FlameCount;//フレームカウント
    private float MoveFlame;//移動フレーム
    private bool MoveFlag;//移動フラグ true 移動中　false 移動してない
    private float EndPosi;//移動先
    private float MoveSpeed;//移動速度

    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {
        this.Fall();

        if (Input.GetKeyDown(KeyCode.K))
        {
            SetLineMove(nowHeight + 1, 10);
        }
    }

    private void FixedUpdate()
    {
        LineMovePosition();
    }

    //落下制限
    private void Fall()
    {
        if (!FallFlag)
        {
            return;
        }

        //柱のローカル座標のYが+2ずれているため補正する
        if (this.transform.localPosition.y + this.transform.parent.localPosition.y <= (float)nowHeight)
        {

            //座標固定
            this.transform.localPosition = MovePosition();

            //rigitbodyの影響を受けなくする
            this.GetComponent<Rigidbody>().isKinematic = true;
        }
        else
        {
            //rigitbodyの影響を受けるようにする
            this.GetComponent<Rigidbody>().isKinematic = false;
        }
    }

    private void LineMovePosition()
    {
        if (MoveFlag == true)//移動するとき
        {
            if (FlameCount >= MoveFlame)
            {
                //フラグ
                MoveFlag = false;
                FallFlag = true;
                nowHeight++;
            }

            this.transform.localPosition += new Vector3(0.0f, MoveSpeed, 0.0f);

            FlameCount++;
        }
    }

    //高さを変更する
    public void ChangeHeight()
    {
        if (nowHeight == 0)//一番下から一番上
        {
            nowHeight += 3;
        }
        else if (nowHeight == 1)//真ん中下から上
        {
            nowHeight += 1;
        }
        else if (nowHeight == 2)//真ん中上から下
        {
            nowHeight -= 1;
        }
        else if (nowHeight == 3)//一番上から一番下
        {
            nowHeight -= 3;
        }

        this.name = "Block" + nowHeight;//名前を書き換え
        this.transform.localPosition = MovePosition();//座標を変更
    }


    //指定した高さに変更
    //height  変更する高さ
    public int SelectChangeHeight(int height)
    {
        int prevheight = nowHeight;//前の高さを保存
        nowHeight = height;//変更する高さを変更

        return prevheight;
    }

    //設定されているオブジェクトを直線移動する
    //戻り値　true 移動中　false 移動してない
    //endposi 移動先
    //flame 移動フレーム
    public bool SetLineMove(float endposiY, int moveflame)
    {
        if (MoveFlag == false)
        {
            FlameCount = 0;
            MoveFlag = true;
            FallFlag = false;
            MoveFlame = moveflame;
            EndPosi = endposiY;
            MoveSpeed = (EndPosi - nowHeight) / (float)moveflame;
            
        }
        return MoveFlag;
    }

    //ブロックが本来いるはずの座標を返す
    private Vector3 MovePosition()
    {
        return new UnityEngine.Vector3(
            this.transform.localPosition.x, 
            (float)nowHeight - this.transform.parent.localPosition.y, 
            this.transform.localPosition.z);
    }

    

    
    
}
